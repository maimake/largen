<?php

namespace <%=namespace%>;

use Illuminate\Database\Eloquent\Builder;
use Maimake\Largen\Support\Models\Search\Search;

class <%=classname%> extends Search
{

<% if has_user %>
    public function getUsernameAttribute($value)    {return $value;}
<% endif %>

    protected function filter(Builder $query)
    {
<% for column in columns %>
        $this->applyWhere($query, '<%= column %>', $this-><%= column %>);
<% endfor %>

<% if has_user %>
        $query->with('user');
        if (!empty($this->username))
        {
            $query->whereHas('user', function (Builder $query) {
                $this->applyWhere($query, 'name', $this->username);
            });
        }
<% endif %>
    }


    protected function sort(Builder $query, $sort, $direction)
    {
<% if has_user %>
        if ($sort == 'username')
        {
            $query->leftJoin('users', '<%= model_plural %>.user_id', '=', 'users.id')
                ->orderBy('users.name', $direction);
        }else{
            $query->orderBy($sort, $direction);
        }
<% else %>
        $query->orderBy($sort, $direction);
<% endif %>

        if ($sort != 'id')
        {
            $query->orderByDesc('id');
        }
    }

}
